- name: Update package cache
  apt:
    update_cache: yes

- name: Install wget and unzip
  apt:
    name:
      - wget
      - unzip
      - apt-transport-https
    state: present

- name: Set vm.max_map_count sysctl setting
  sysctl:
    name: vm.max_map_count
    value: 262144
    state: present
    reload: yes

- name: Set fs.file-max sysctl setting
  sysctl:
    name: fs.file-max
    value: 65536
    state: present
    reload: yes

- name: Set ulimit -n setting
  lineinfile:
    path: /etc/security/limits.conf
    line: "* hard nofile 65536"
    state: present

- name: Set ulimit -u setting
  lineinfile:
    path: /etc/security/limits.conf
    line: "* hard nproc 8192"
    state: present

- name: Add PostgreSQL repository key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present

- name: Add PostgreSQL repository
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
    state: present

- name: Install PostgreSQL 11
  apt:
    name:
      - postgresql-11
      - postgresql-contrib-11
    state: present

- name: Create postgres user
  become: true
  become_user: root
  user:
    name: postgres
    state: present

- name: Change PostgreSQL authentication method
  lineinfile:
    path: /etc/postgresql/11/main/pg_hba.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - { regexp: "^local.*?peer$", line: "local   all             all                                     trust" }
    - { regexp: "^host.*?127.0.0.1/32.*?ident$", line: "host    all             all             127.0.0.1/32            md5" }
    - { regexp: "^host.*?::1/128.*?ident$", line: "host    all             all             ::1/128                 md5" }
  notify: Restart PostgreSQL

- name: Change permissions of PostgreSQL data directory
  file:
    path: /var/lib/postgresql/11/main
    mode: '0700'
    recurse: yes

- name: Start PostgreSQL service
  systemd:
    name: postgresql@11-main.service
    state: started
    enabled: yes

- name: Change the password of the postgres user
  become: true
  become_user: root
  user:
    name: postgres
    password: "{{ postgres_user_password | password_hash('sha512') }}"

- name: install acl package
  become: true
  apt:
    update_cache: yes
    name: acl

- name: Configure PostgreSQL for SonarQube
  become: true
  become_user: postgres

  shell: |
    psql -c 'create database sonarqubedb;'
    psql -c "CREATE USER sonarqube WITH ENCRYPTED PASSWORD '{{ sonarqube_user_password | password_hash('sha512') }}';"
    psql -c 'grant all privileges on database sonarqubedb to sonarqube;'

- name: Download Sonarqube
  get_url:
    url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonarqube_version }}.zip"
    dest: "/opt/sonarqube-{{ sonarqube_version }}.zip"
    mode: '0644'

- name: Unzip Sonarqube source files
  unarchive:
    src: "/opt/sonarqube-{{ sonarqube_version }}.zip"
    dest: /opt/
    remote_src: yes
  become: true

- name: Rename Sonarqube folder
  file:
    src: "/opt/sonarqube-{{ sonarqube_version }}"
    dest: /opt/sonarqube
    state: link
    force: yes
  become: true

- name: Modify sonar.properties file
  blockinfile:
    path: "/opt/sonarqube/conf/sonar.properties"
    block: |
      # PostgreSQL configuration
      sonar.jdbc.username=sonar
      sonar.jdbc.password=sonar-db-password
      sonar.jdbc.url=jdbc:postgresql://localhost/onarqubedb
    marker: ""
    insertafter: "^#?sonar.jdbc.url=.*$"
    state: present
  become: true

- name: Create sonarqube user
  user:
    name: sonarqube
    shell: /bin/bash
    createhome: yes
    password: "{{ sonar_user_password | password_hash('sha512') }}"
  become: true
    
- name: Change ownership of Sonarqube directory
  file:
    path: /opt/sonarqube
    owner: sonar
    group: sonar
    recurse: yes
    state: directory
  become: true

- name: Install openjdk-17-jdk
  apt:
    name: openjdk-17-jdk
    state: present

- name: Set Java path and start Sonarqube service
  become: true
  become_user: sonar
  environment:
    SONAR_JAVA_PATH: /usr/bin/java 
  shell: /opt/sonarqube/bin/linux-x86-64/sonar.sh start

- name: Create systemd service file
  template:
    src: sonarqube.service.j2
    dest: /etc/systemd/system/sonarqube.service
  notify:
    - Reload systemd

- name: Start SonarQube service
  systemd:
    name: sonarqube
    state: started
    enabled: yes
